/**
 * Supported blockchain networks for address records.
 * Each chain has a corresponding coin type used internally for ENS address records.
 *
 * @example
 * ```typescript
 * import { ChainName } from '@thenamespace/offchain-manager';
 *
 * // Use in address records
 * const addressRecord = {
 *   chain: ChainName.Ethereum,
 *   value: '0xd8dA6BF26964aF9D7eEd9e03E53415D37aA96045'
 * };
 * ```
 */
export declare enum ChainName {
    /** Ethereum mainnet */
    Ethereum = "eth",
    /** Solana */
    Solana = "sol",
    /** Arbitrum One */
    Arbitrum = "arb",
    /** Optimism */
    Optimism = "op",
    /** Base */
    Base = "base",
    /** Polygon (formerly Matic) */
    Polygon = "polygon",
    /** BNB Smart Chain (formerly BSC) */
    Bsc = "bsc",
    /** Avalanche C-Chain */
    Avalanche = "avax",
    /** Gnosis Chain (formerly xDai) */
    Gnosis = "gnosis",
    /** zkSync Era */
    Zksync = "zksync",
    /** Cosmos Hub */
    Cosmos = "cosmos",
    /** NEAR Protocol */
    Near = "near",
    /** Linea */
    Linea = "linea",
    /** Scroll */
    Scroll = "scroll",
    /** Bitcoin */
    Bitcoin = "btc",
    /** Starknet */
    Starknet = "starknet",
    /** Sui Network */
    Sui = "sui",
    /** Unichain */
    Unichain = "unichain",
    /** Berachain */
    Berachain = "berachain",
    /** WorldChain */
    WorldChain = "world_chain",
    /** Zora */
    Zora = "zora",
    /** Celo */
    Celo = "celo",
    /** Aptos */
    Aptos = "aptos",
    /** Algorand */
    Algorand = "algorand"
}
/**
 * Metadata for a supported blockchain network.
 * Contains display information and the coin type used for ENS address records.
 */
export interface ChainMetadata {
    /** Optional chain identifier */
    chain?: ChainName;
    /** Human-readable display name for the chain */
    label: string;
    /** SLIP-0044 coin type used for ENS address records */
    coin: number;
}
export declare const chainMetadata: Record<ChainName, ChainMetadata>;
/**
 * Get the SLIP-0044 coin type for a given blockchain network.
 * This coin type is used internally for ENS address records.
 *
 * @param chain - The blockchain network to get the coin type for
 * @returns The SLIP-0044 coin type number
 *
 * @example
 * ```typescript
 * import { getCoinType, ChainName } from '@thenamespace/offchain-manager';
 *
 * const ethCoinType = getCoinType(ChainName.Ethereum); // Returns 60
 * const baseCoinType = getCoinType(ChainName.Base); // Returns 8453
 * ```
 */
export declare const getCoinType: (chain: ChainName) => number;
